set(Qt6_FOUND TRUE)
set(QT_VERSION_MAJOR 6)
set(QT_VERSION 6.0.0)
set(Qt6_VERSION 6.0.0)

# Provide dummy executables so CMake can configure and build without a real Qt SDK
set(_qt_stub "${CMAKE_CURRENT_LIST_DIR}/qt_tool_stub.py")
set(QT_MOC_EXECUTABLE "${_qt_stub}")
set(QT_RCC_EXECUTABLE "${_qt_stub}")
set(QT_UIC_EXECUTABLE "${_qt_stub}")

if(NOT COMMAND qt_add_executable)
function(qt_add_executable target)
    set(options MANUAL_FINALIZATION)
    cmake_parse_arguments(QT_EXE "${options}" "" "" ${ARGN})
    add_executable(${target} ${QT_EXE_UNPARSED_ARGUMENTS})
endfunction()
endif()

if(NOT COMMAND qt_finalize_executable)
function(qt_finalize_executable target)
endfunction()
endif()

if(NOT TARGET Qt6::moc)
    add_executable(Qt6::moc IMPORTED)
    set_target_properties(Qt6::moc PROPERTIES IMPORTED_LOCATION "${QT_MOC_EXECUTABLE}")
endif()
if(NOT TARGET Qt6::rcc)
    add_executable(Qt6::rcc IMPORTED)
    set_target_properties(Qt6::rcc PROPERTIES IMPORTED_LOCATION "${QT_RCC_EXECUTABLE}")
endif()
if(NOT TARGET Qt6::uic)
    add_executable(Qt6::uic IMPORTED)
    set_target_properties(Qt6::uic PROPERTIES IMPORTED_LOCATION "${QT_UIC_EXECUTABLE}")
endif()

include("${CMAKE_CURRENT_LIST_DIR}/Qt6WidgetsConfig.cmake")
